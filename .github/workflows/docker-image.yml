name: Docker Image CI/CD to Docker Hub

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_push: # Renamed job to reflect its new purpose
    runs-on: ubuntu-latest
    
    # Permissions for GitHub's OIDC token (if you want to use it for secure Docker Hub login)
    # Required for the 'id-token: write' permission if using OIDC with docker/login-action
    permissions:
      contents: read
      packages: write # Required for publishing to GitHub Packages, but good to have generally for CI/CD
      id-token: write # Required for OpenID Connect (OIDC) authentication with Docker Hub

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      # This action sets up Docker Buildx, an extended Docker builder for more powerful builds
      # It's good practice for modern Docker builds, including multi-platform builds if needed later.
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      # This action logs you into Docker Hub using secrets for security
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
        registry: docker.io

    - name: Extract metadata (tags, labels) for Docker
      # This action helps in generating standard Docker image tags and labels based on git events
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: wirednerd/docker-image-refresh
        # Define tags based on branch, commit SHA, etc.
        tags: |
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }} # Tag 'latest' only on master push
          type=sha,enable=true,prefix= # Use commit SHA as a tag (e.g., your_dockerhub_username/my-image-name:abcdef123456)
          type=ref,event=branch # Tag with branch name (e.g., your_dockerhub_username/my-image-name:master)
          type=semver,pattern={{version}} # If you use semver tags (e.g., v1.2.3 -> 1.2.3)
          type=semver,pattern={{major}}.{{minor}} # e.g., v1.2.3 -> 1.2
          type=schedule,pattern={{date}},enable=${{ github.event_name == 'schedule' }} # If triggered by schedule

    - name: Build and push Docker image
      # This action builds your Docker image and pushes it to the logged-in registry
      uses: docker/build-push-action@v5
      with:
        context: . # Path to the build context (where your Dockerfile is)
        file: Dockerfile # Path to your Dockerfile
        push: true # Set to true to push the image to Docker Hub
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # cache-from: type=gha # Optional: use GitHub Actions cache for faster builds
        # cache-to: type=gha,mode=max # Optional: cache build layers
        
